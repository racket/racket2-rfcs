#lang rhombus/static

import:
  rhombus/measure

def N = 2000
def M = 10000
def lst = (for PairList (i in 0..N): i)
def alt_lst = (for PairList (i in 0..N): i)

def tl = for List (e in lst): e
def alt = tl.add("x").take_left(N)
def alt2 = tl.insert(N div 2, "x").delete(N div 2)
def fresh = for List (e in lst): e

measure.time:
  ~gc
  for values(v = #false) (i in 0..M):
    tl == tl

measure.time:
  ~gc
  for values(v = #false) (i in 0..M):
    tl == alt

measure.time:
  ~gc
  for values(v = #false) (i in 0..M):
    tl == alt2

measure.time:
  ~gc
  for values(v = #false) (i in 0..M):
    tl == fresh

measure.time:
  ~gc
  for values(v = #false) (i in 0..M):
    lst == alt_lst

measure.time:
  ~gc
  for (i in 0..N):
    ((tl == tl.insert(i, "x").delete(i))
       && (tl == tl.remove(i).insert(i, tl[i])))
     || error(#'equal, "bad result at " +& i)
