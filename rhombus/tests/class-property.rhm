#lang rhombus

use_static

block:
  class Posn(x, y):
    property
    | is_origin:
        x == 0 && y == 0
    | is_origin := at:
        if (if at | is_origin | !is_origin)
        | #void
        | "no!"
    method is_at_origin():
      is_origin
    method at_this_origin():
      this.is_origin
    final property is_origin_dont_ask_again:
      is_origin
  check:
    def p: Posn(1, 2)
    [p.is_origin,
     p.is_at_origin(),
     p.at_this_origin(),
     Posn.is_origin(p),
     Posn.is_at_origin(p),
     p.is_origin_dont_ask_again,
     p.is_origin := "somewhere"]
    ~is [#false, #false, #false, #false, #false, #false,
         #void]
  check:
    use_dynamic
    [dynamic(Posn(0, 0)).is_origin,
     dynamic(Posn(0, 0)).is_at_origin(),
     block:
       def proc: Posn(0, 1).is_at_origin
       proc(),
     dynamic(Posn(0, 0)).is_origin_dont_ask_again]
    ~is [#true, #true, #false, #true]

block:
  class Posn(x, y):
    nonfinal
    internal _Posn
    property is_origin:
      x == 0 && y == 0
  class Posn3D(z):
    extends Posn
    override property is_origin:
      z == 0 && super.is_origin
  check:
    def p: Posn3D(0, 0, 0)
    [p.is_origin,
     block:
       use_dynamic
       dynamic(p).is_origin,
     (_Posn(1, 2)).is_origin]
    ~is [#true, #true, #false]
    
block:
  class Posn(x, y):
    nonfinal
    internal _Posn
    abstract property is_origin
  class Posn3D(z):
    extends Posn
    override property is_origin: #true
  check:
    Posn3D(0, 0, 0).is_origin
    ~is #true

check:
  use_static
  class Posn(x, y):
    nonfinal
    property | p: 0
             | p := x: #void
  class Posn3D(z):
    extends Posn
    method n(): super.p := 1
  Posn3D(1, 2, 3).n()
  ~is #void

check:
  ~eval
  class Posn(x, y):
    nonfinal
    property is_origin: #true
  class Posn3D(z):
    extends Posn
    override is_origin: #false
  ~throws "cannot override superclass's property with a non-property method"

check:
  ~eval
  class Posn(x, y):
    nonfinal
    abstract property is_origin
  class Posn3D(z):
    extends Posn
    override is_origin(): #false
  ~throws "cannot override superclass's property with a non-property method"

check:
  ~eval
  class Posn(x, y):
    nonfinal
    property is_origin: #true
  class Posn3D(z):
    extends Posn
    final override is_origin: #false
  ~throws "cannot override superclass's property with a non-property method"

check:
  ~eval
  class Posn(x, y):
    nonfinal
    method is_origin(): #true
  class Posn3D(z):
    extends Posn
    override property is_origin: #false
  ~throws "cannot override superclass's non-property method with a property"

block:
  class Posn(x, y):
    internal _Posn
    private property is_origin:
      x == 0 && y == 0
    private method is_at_origin():
      is_origin
  check:
    def p: _Posn(0, 0)
    [p.is_origin,
     p.is_at_origin()]
    ~is [#true, #true]

block:
  interface Pointy:
    abstract property is_origin
  class Posn(x, y):
    implements Pointy
    override property is_origin:
      x == 0 && y == 0
  check:
    def p :: Pointy: Posn(0, 0)
    [p.is_origin]
    ~is [#true]

check:
  ~eval
  interface Pointy:
    abstract property is_origin
  class Posn(x, y):
    implements Pointy
    override is_origin():
      x == 0 && y == 0
  ~throws "cannot override interface's property with a non-property method"

check:
  ~eval
  interface Pointy:
    abstract is_origin
  class Posn(x, y):
    implements Pointy
    override property is_origin:
      x == 0 && y == 0
  ~throws "cannot override interface's non-property method with a property"

check:
  class A():
    nonfinal
    property m:
      5
  class B():
    extends A
    nonfinal
    abstract override property m
  class C():
    extends B
    override property m:
      6
  C().m
  ~is 6

check:
  ~eval
  class A():
    nonfinal
    property m:
      5
  class B():
    extends A
    nonfinal
    abstract override property m
  class C():
    extends B
  ~throws "final class cannot have abstract methods"

check:
  ~eval
  class A():
    nonfinal
    property m:
      5
  class B():
    extends A
    abstract override property m
  ~throws "final class cannot have abstract methods"
