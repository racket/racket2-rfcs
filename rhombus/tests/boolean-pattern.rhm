#lang rhombus

check:
  use_static
  let x && [y] : [10]
  [[x, y], x.length()]
  ~is [[[10], 10], 1]

check:
  // static info flows from lhs to rhs
  use_static
  class Posn(x, y)
  def Posn(x, y) && z = dynamic(Posn(1, 2))
  z.x
  ~is 1

check:
  // static info doesn't go right to left
  ~eval
  use_static
  class Posn(x, y)
  def z && Posn(x, y) = dynamic(Posn(1, 2))
  z.x
  ~throws values("no such field or method", "static")

block:
  fun try(v):
    match v
    | [x] || [a, b, c]: "lists"
    | ~else: "other"
  check:
    try([1])
    ~is "lists"
  check:
    try([1, 2, 3])
    ~is "lists"
  check:
    try([])
    ~is "other"
