#lang rhombus

fun check_later():
  ok_later

let accum: 1
let accum: accum+1
let accum: accum+1
check:
  accum
  ~is 3

def ok_later = "ok"
def c_later = check_later()

check:
  c_later
  ~is "ok"
check:
  check_later()
  ~is "ok"

// check scope pruning in `let`
check:
  import:
    meta -1:
      rhombus/meta.syntax_meta
  let (id1, id2):
    let id1 = Syntax.literal 'id'
    values(id1, Syntax.literal 'id')
  let id3 = Syntax.literal 'id'
  syntax_meta.equal_name_and_scopes(id1, id2)
    && syntax_meta.equal_name_and_scopes(id1, id3)
    && syntax_meta.equal_name_and_scopes(id2, id3)
  ~is #true
