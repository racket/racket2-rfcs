#lang rhombus/static/and_meta
import:
  lib("racket/class.rkt"):
    expose: send
            #{is-a?}
    rename: send as rkt_send
            #{is-a?} as rkt_is_a
  lib("racket/draw.rkt")

export:
  rename:
    class.#{make-object} as make_object
  draw.#{bitmap%}
  draw.#{color%} draw.#{the-color-database} draw.#{make-color}
  draw.#{pen%} draw.#{the-pen-list}
  draw.#{brush%} draw.#{the-brush-list}
  draw.#{font%}
  draw.#{region%}
  draw.#{dc-path%}
  draw.#{linear-gradient%}
  draw.#{radial-gradient%}
  draw.#{dc<%>}
  send
  is_a

expr.macro 'send $target ... . $(method :: Identifier)($(kw :: Keyword): $kw_arg, ..., $arg, ...)':
  expr_meta.pack_s_exp(['rkt_send',
                        expr_meta.pack_expr('$target ...'),
                        method,
                        &(for List:
                            each p: [[kw, expr_meta.pack_expr(kw_arg)], ...]
                            each i: p
                            i),
                        expr_meta.pack_expr(arg), ...])

expr.macro '$obj is_a $class':
  expr_meta.pack_s_exp(['rkt_is_a', obj, class])
  